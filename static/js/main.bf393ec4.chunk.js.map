{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","squares2","concat","window","nthBlank","parseInt","Math","random","filter","e","j","setState","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf393ec4.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null)\n        }\n      ],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    let history = this.state.history.slice(0, this.state.stepNumber + 1);\n    let squares = history[history.length - 1].squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    history = history.concat([\n      {\n        squares: squares\n      }\n    ])\n\n\n    let squares2 = history[history.length - 1].squares.slice();\n    if (!calculateWinner(squares2)) {\n      window.squares2 = squares2\n      let nthBlank = parseInt(Math.random() * squares2.filter(e => !e).length);\n      for (let j = 0; j < 9; j++) {\n        if (squares2[j]) continue;\n        if (nthBlank-- == 0) squares2[j] = !this.state.xIsNext ? \"X\" : \"O\";\n      }\n      history = history.concat([\n        {\n          squares: squares2\n        }\n      ])\n    }\n\n    this.setState({\n      history,\n      stepNumber: history.length - 1\n    });\n\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n      return (move % 2 == 1) ? null : (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={i => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}